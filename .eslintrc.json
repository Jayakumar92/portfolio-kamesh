{
  "root": true,
  "extends": [
    "next",
    "eslint:recommended",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["prettier", "@typescript-eslint", "react", "react-hooks"],
  "rules": {
    "@typescript-eslint/no-shadow": "error",
    "no-shadow": "off",
    "no-undef": "off",

    "eqeqeq": ["error", "smart"],
    "no-console": ["error", { "allow": ["warn", "error"] }],

    // es2015
    "no-duplicate-imports": "error",
    "no-useless-computed-key": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-numeric-literals": "warn",
    "prefer-rest-params": "warn",

    // best practices
    "no-return-await": "error",
    "require-await": "error",
    "no-unused-expressions": "error",

    "curly": "error",
    // TypeScript rules
    "@typescript-eslint/array-type": [
      "warn",
      {
        "default": "array"
      }
    ],
    "@typescript-eslint/consistent-type-assertions": [
      "warn",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "never"
      }
    ],

    // React rules
    "react/jsx-fragments": ["warn", "syntax"], // Shorthand syntax for React fragments
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": ["ts", "tsx"]
      }
    ],
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "prettier/prettier": "warn",

    // eslint-plugin-react
    "react/no-access-state-in-setstate": "error",
    "react/no-array-index-key": "error"
  }
}
